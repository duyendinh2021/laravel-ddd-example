services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: laravel-ddd-app-prod
    restart: unless-stopped
    ports:
      - "80:80"
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_HOST=db
      - DB_DATABASE=laravel_ddd_prod
      - DB_USERNAME=laravel
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
    volumes:
      - ./storage:/var/www/html/storage
    networks:
      - laravel-ddd
    depends_on:
      - db
      - redis

  db:
    image: mysql:8.0
    container_name: laravel-ddd-db-prod
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: laravel_ddd_prod
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: laravel
    volumes:
      - dbdata:/var/lib/mysql
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - laravel-ddd

  redis:
    image: redis:alpine
    container_name: laravel-ddd-redis-prod
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    networks:
      - laravel-ddd

volumes:
  dbdata:
    driver: local

networks:
  laravel-ddd:
    driver: bridge